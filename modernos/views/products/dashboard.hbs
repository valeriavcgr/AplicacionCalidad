<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>Dashboard Administrador - ModerNos</title>
<link crossorigin="" href="https://fonts.gstatic.com/" rel="preconnect"/>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet"/>
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
<script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
<script>
    tailwind.config = {
        darkMode: "class",
        theme: {
            extend: {
                colors: {
                    "primary": "#1173d4",
                    "background-light": "#f6f7f8",
                    "background-dark": "#101922",
                },
                fontFamily: {
                    "display": ["Inter", "sans-serif"],
                },
                borderRadius: {
                    "DEFAULT": "0.375rem",
                    "lg": "0.5rem",
                    "xl": "0.75rem",
                    "full": "9999px",
                },
            },
        },
    };
</script>
</head>
<body class="bg-background-light dark:bg-background-dark font-display">
<main class="flex-grow container mx-auto px-6 py-8">
    <div class="flex justify-between items-center mb-8">
        <h2 class="text-3xl font-bold text-gray-900 dark:text-white">
            Dashboard
        </h2>
        <div class="flex space-x-4">
            <a href="/category/marcas" class="modal-open flex items-center gap-2 px-4 py-2 text-sm font-bold bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors" data-modal="addBrandModal">
                Marcas
            </a>
            <a href="/products/celulares" class="modal-open flex items-center gap-2 px-4 py-2 text-sm font-bold bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors" data-modal="addPhoneModal">
                Celulares
            </a>
        </div>
    </div>

    <div class="bg-white dark:bg-background-dark/50 rounded-xl shadow-lg overflow-hidden">
        <div class="p-6">
            <div class="flex space-x-4">
                <!-- Campo de búsqueda -->
                <div class="relative flex-grow">
                    <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 text-gray-400">search</span>
                    <input class="form-input w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-background-light dark:bg-background-dark rounded-lg focus:outline-none focus:ring-primary focus:border-primary" placeholder="Buscar por nombre de producto..." type="text"/>
                </div>

                <!-- Selector de categoría -->
                <div class="relative">
                    <select id="categorySelect" class="form-select appearance-none w-full md:w-48 pl-3 pr-10 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-background-light dark:bg-background-dark rounded-lg focus:outline-none focus:ring-primary focus:border-primary">
                        <option value="">Todas las marcas</option>
                    </select>
                    <span class="material-symbols-outlined absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none">expand_more</span>
                </div>
            </div>
        </div>

        <!-- Tabla de productos -->
        <div class="overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th class="px-6 py-3" scope="col">Marca</th>
                        <th class="px-6 py-3" scope="col">Modelo</th>
                        <th class="px-6 py-3" scope="col">Precio</th>
                        <th class="px-6 py-3 text-center" scope="col">Stock</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each products}}
                    <tr class="bg-white border-b dark:bg-background-dark dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                        <th class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white" scope="row">
                            {{this.category.name}}
                        </th>
                        <td class="px-6 py-4">{{this.name}}</td>
                        <td class="px-6 py-4">{{this.price}}</td>
                        <td class="px-6 py-4 text-center">
                            <span class="px-2 py-1 text-xs font-semibold text-green-800 bg-green-100 rounded-full dark:bg-green-900 dark:text-green-300">
                                {{this.stock}}
                            </span>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const searchInput = document.querySelector('input[type="text"]');
  const categorySelect = document.getElementById('categorySelect');
  const tableBody = document.querySelector('tbody');

  // Buscar productos por nombre
  searchInput.addEventListener('input', async (e) => {
    const query = e.target.value.trim();
    if (query === "") {
      loadAllProducts();
      return;
    }
    const res = await fetch(`/products/name/${query}`);
    const products = await res.json();
    renderProducts(products);
  });

  // Filtrar productos por categoría
  categorySelect.addEventListener('change', async (e) => {
    const selectedId = e.target.value;
    if (selectedId === "") {
      loadAllProducts();
      return;
    }

    const res = await fetch(`/products`);
    const products = await res.json();
    const filtered = products.filter(p => p.category && p.category.id == selectedId);
    renderProducts(filtered);
  });

  // Cargar todas las categorías
  async function loadCategories() {
    try {
      const res = await fetch('/category');
      const categories = await res.json();
      const select = document.getElementById('categorySelect');

      select.innerHTML = '<option value="">Todas las marcas</option>';

      categories.forEach(cat => {
        const option = document.createElement('option');
        option.value = cat.id;
        option.textContent = cat.name;
        select.appendChild(option);
      });
    } catch (error) {
      console.error('Error al cargar categorías:', error);
    }
  }

  // Cargar todos los productos
  async function loadAllProducts() {
    const res = await fetch('/products');
    const products = await res.json();
    renderProducts(products);
  }

  //Renderizar tabla
  function renderProducts(products) {
    tableBody.innerHTML = "";
    products.forEach(p => {
      tableBody.innerHTML += `
        <tr class="bg-white border-b dark:bg-background-dark dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
          <th class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
            ${p.category ? p.category.name : 'Sin categoría'}
          </th>
          <td class="px-6 py-4">${p.name}</td>
          <td class="px-6 py-4">${p.price}</td>
          <td class="px-6 py-4 text-center">
            <span class="px-2 py-1 text-xs font-semibold text-green-800 bg-green-100 rounded-full dark:bg-green-900 dark:text-green-300">
              ${p.stock}
            </span>
          </td>
        </tr>`;
    });
  }

  // Inicialización
  loadAllProducts();
  loadCategories();
});
</script>
</body>
</html>
